Resources:
  BaseVPCD45965B8:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/24
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: ecsworkshop-base/BaseVPC
    Metadata:
      'aws:cdk:path': ecsworkshop-base/BaseVPC/Resource
  BaseVPCPublicSubnet1Subnet3A607EE2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref BaseVPCD45965B8
      AvailabilityZone: us-east-1a
      CidrBlock: 10.0.0.0/27
      MapPublicIpOnLaunch: true
      Tags:
        - Key: 'aws-cdk:subnet-name'
          Value: Public
        - Key: 'aws-cdk:subnet-type'
          Value: Public
        - Key: Name
          Value: ecsworkshop-base/BaseVPC/PublicSubnet1
    Metadata:
      'aws:cdk:path': ecsworkshop-base/BaseVPC/PublicSubnet1/Subnet
  BaseVPCPublicSubnet1RouteTableDD9C5642:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref BaseVPCD45965B8
      Tags:
        - Key: Name
          Value: ecsworkshop-base/BaseVPC/PublicSubnet1
    Metadata:
      'aws:cdk:path': ecsworkshop-base/BaseVPC/PublicSubnet1/RouteTable
  BaseVPCPublicSubnet1RouteTableAssociation52241D26:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref BaseVPCPublicSubnet1RouteTableDD9C5642
      SubnetId: !Ref BaseVPCPublicSubnet1Subnet3A607EE2
    Metadata:
      'aws:cdk:path': ecsworkshop-base/BaseVPC/PublicSubnet1/RouteTableAssociation
  BaseVPCPublicSubnet1DefaultRoute027C883F:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref BaseVPCPublicSubnet1RouteTableDD9C5642
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref BaseVPCIGWDCBB6967
    DependsOn:
      - BaseVPCVPCGWB245CE93
    Metadata:
      'aws:cdk:path': ecsworkshop-base/BaseVPC/PublicSubnet1/DefaultRoute
  BaseVPCPublicSubnet1EIP87086307:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: ecsworkshop-base/BaseVPC/PublicSubnet1
    Metadata:
      'aws:cdk:path': ecsworkshop-base/BaseVPC/PublicSubnet1/EIP
  BaseVPCPublicSubnet1NATGateway23160C86:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      SubnetId: !Ref BaseVPCPublicSubnet1Subnet3A607EE2
      AllocationId: !GetAtt 
        - BaseVPCPublicSubnet1EIP87086307
        - AllocationId
      Tags:
        - Key: Name
          Value: ecsworkshop-base/BaseVPC/PublicSubnet1
    DependsOn:
      - BaseVPCPublicSubnet1DefaultRoute027C883F
      - BaseVPCPublicSubnet1RouteTableAssociation52241D26
    Metadata:
      'aws:cdk:path': ecsworkshop-base/BaseVPC/PublicSubnet1/NATGateway
  BaseVPCPublicSubnet2Subnet1115E1D2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref BaseVPCD45965B8
      AvailabilityZone: us-east-1b
      CidrBlock: 10.0.0.32/27
      MapPublicIpOnLaunch: true
      Tags:
        - Key: 'aws-cdk:subnet-name'
          Value: Public
        - Key: 'aws-cdk:subnet-type'
          Value: Public
        - Key: Name
          Value: ecsworkshop-base/BaseVPC/PublicSubnet2
    Metadata:
      'aws:cdk:path': ecsworkshop-base/BaseVPC/PublicSubnet2/Subnet
  BaseVPCPublicSubnet2RouteTableF97FEF81:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref BaseVPCD45965B8
      Tags:
        - Key: Name
          Value: ecsworkshop-base/BaseVPC/PublicSubnet2
    Metadata:
      'aws:cdk:path': ecsworkshop-base/BaseVPC/PublicSubnet2/RouteTable
  BaseVPCPublicSubnet2RouteTableAssociationC59A8337:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref BaseVPCPublicSubnet2RouteTableF97FEF81
      SubnetId: !Ref BaseVPCPublicSubnet2Subnet1115E1D2
    Metadata:
      'aws:cdk:path': ecsworkshop-base/BaseVPC/PublicSubnet2/RouteTableAssociation
  BaseVPCPublicSubnet2DefaultRoute8E53C638:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref BaseVPCPublicSubnet2RouteTableF97FEF81
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref BaseVPCIGWDCBB6967
    DependsOn:
      - BaseVPCVPCGWB245CE93
    Metadata:
      'aws:cdk:path': ecsworkshop-base/BaseVPC/PublicSubnet2/DefaultRoute
  BaseVPCPublicSubnet2EIP9D3F1B06:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: ecsworkshop-base/BaseVPC/PublicSubnet2
    Metadata:
      'aws:cdk:path': ecsworkshop-base/BaseVPC/PublicSubnet2/EIP
  BaseVPCPublicSubnet2NATGateway6616AE08:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      SubnetId: !Ref BaseVPCPublicSubnet2Subnet1115E1D2
      AllocationId: !GetAtt 
        - BaseVPCPublicSubnet2EIP9D3F1B06
        - AllocationId
      Tags:
        - Key: Name
          Value: ecsworkshop-base/BaseVPC/PublicSubnet2
    DependsOn:
      - BaseVPCPublicSubnet2DefaultRoute8E53C638
      - BaseVPCPublicSubnet2RouteTableAssociationC59A8337
    Metadata:
      'aws:cdk:path': ecsworkshop-base/BaseVPC/PublicSubnet2/NATGateway
  BaseVPCPublicSubnet3SubnetB9BB692A:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref BaseVPCD45965B8
      AvailabilityZone: us-east-1c
      CidrBlock: 10.0.0.64/27
      MapPublicIpOnLaunch: true
      Tags:
        - Key: 'aws-cdk:subnet-name'
          Value: Public
        - Key: 'aws-cdk:subnet-type'
          Value: Public
        - Key: Name
          Value: ecsworkshop-base/BaseVPC/PublicSubnet3
    Metadata:
      'aws:cdk:path': ecsworkshop-base/BaseVPC/PublicSubnet3/Subnet
  BaseVPCPublicSubnet3RouteTableABDF9515:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref BaseVPCD45965B8
      Tags:
        - Key: Name
          Value: ecsworkshop-base/BaseVPC/PublicSubnet3
    Metadata:
      'aws:cdk:path': ecsworkshop-base/BaseVPC/PublicSubnet3/RouteTable
  BaseVPCPublicSubnet3RouteTableAssociationB95627FF:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref BaseVPCPublicSubnet3RouteTableABDF9515
      SubnetId: !Ref BaseVPCPublicSubnet3SubnetB9BB692A
    Metadata:
      'aws:cdk:path': ecsworkshop-base/BaseVPC/PublicSubnet3/RouteTableAssociation
  BaseVPCPublicSubnet3DefaultRoute9E47DAC9:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref BaseVPCPublicSubnet3RouteTableABDF9515
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref BaseVPCIGWDCBB6967
    DependsOn:
      - BaseVPCVPCGWB245CE93
    Metadata:
      'aws:cdk:path': ecsworkshop-base/BaseVPC/PublicSubnet3/DefaultRoute
  BaseVPCPublicSubnet3EIP9775FC48:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: ecsworkshop-base/BaseVPC/PublicSubnet3
    Metadata:
      'aws:cdk:path': ecsworkshop-base/BaseVPC/PublicSubnet3/EIP
  BaseVPCPublicSubnet3NATGateway38B0B965:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      SubnetId: !Ref BaseVPCPublicSubnet3SubnetB9BB692A
      AllocationId: !GetAtt 
        - BaseVPCPublicSubnet3EIP9775FC48
        - AllocationId
      Tags:
        - Key: Name
          Value: ecsworkshop-base/BaseVPC/PublicSubnet3
    DependsOn:
      - BaseVPCPublicSubnet3DefaultRoute9E47DAC9
      - BaseVPCPublicSubnet3RouteTableAssociationB95627FF
    Metadata:
      'aws:cdk:path': ecsworkshop-base/BaseVPC/PublicSubnet3/NATGateway
  BaseVPCPrivateSubnet1SubnetF99B1DA5:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref BaseVPCD45965B8
      AvailabilityZone: us-east-1a
      CidrBlock: 10.0.0.96/27
      MapPublicIpOnLaunch: false
      Tags:
        - Key: 'aws-cdk:subnet-name'
          Value: Private
        - Key: 'aws-cdk:subnet-type'
          Value: Private
        - Key: Name
          Value: ecsworkshop-base/BaseVPC/PrivateSubnet1
    Metadata:
      'aws:cdk:path': ecsworkshop-base/BaseVPC/PrivateSubnet1/Subnet
  BaseVPCPrivateSubnet1RouteTable5B5DA874:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref BaseVPCD45965B8
      Tags:
        - Key: Name
          Value: ecsworkshop-base/BaseVPC/PrivateSubnet1
    Metadata:
      'aws:cdk:path': ecsworkshop-base/BaseVPC/PrivateSubnet1/RouteTable
  BaseVPCPrivateSubnet1RouteTableAssociation410EBFCB:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref BaseVPCPrivateSubnet1RouteTable5B5DA874
      SubnetId: !Ref BaseVPCPrivateSubnet1SubnetF99B1DA5
    Metadata:
      'aws:cdk:path': ecsworkshop-base/BaseVPC/PrivateSubnet1/RouteTableAssociation
  BaseVPCPrivateSubnet1DefaultRoute931CABB9:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref BaseVPCPrivateSubnet1RouteTable5B5DA874
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref BaseVPCPublicSubnet1NATGateway23160C86
    Metadata:
      'aws:cdk:path': ecsworkshop-base/BaseVPC/PrivateSubnet1/DefaultRoute
  BaseVPCPrivateSubnet2Subnet88334406:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref BaseVPCD45965B8
      AvailabilityZone: us-east-1b
      CidrBlock: 10.0.0.128/27
      MapPublicIpOnLaunch: false
      Tags:
        - Key: 'aws-cdk:subnet-name'
          Value: Private
        - Key: 'aws-cdk:subnet-type'
          Value: Private
        - Key: Name
          Value: ecsworkshop-base/BaseVPC/PrivateSubnet2
    Metadata:
      'aws:cdk:path': ecsworkshop-base/BaseVPC/PrivateSubnet2/Subnet
  BaseVPCPrivateSubnet2RouteTable7E52A55E:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref BaseVPCD45965B8
      Tags:
        - Key: Name
          Value: ecsworkshop-base/BaseVPC/PrivateSubnet2
    Metadata:
      'aws:cdk:path': ecsworkshop-base/BaseVPC/PrivateSubnet2/RouteTable
  BaseVPCPrivateSubnet2RouteTableAssociation7F742394:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref BaseVPCPrivateSubnet2RouteTable7E52A55E
      SubnetId: !Ref BaseVPCPrivateSubnet2Subnet88334406
    Metadata:
      'aws:cdk:path': ecsworkshop-base/BaseVPC/PrivateSubnet2/RouteTableAssociation
  BaseVPCPrivateSubnet2DefaultRoute8E8DFB45:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref BaseVPCPrivateSubnet2RouteTable7E52A55E
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref BaseVPCPublicSubnet2NATGateway6616AE08
    Metadata:
      'aws:cdk:path': ecsworkshop-base/BaseVPC/PrivateSubnet2/DefaultRoute
  BaseVPCPrivateSubnet3Subnet3FD941A2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref BaseVPCD45965B8
      AvailabilityZone: us-east-1c
      CidrBlock: 10.0.0.160/27
      MapPublicIpOnLaunch: false
      Tags:
        - Key: 'aws-cdk:subnet-name'
          Value: Private
        - Key: 'aws-cdk:subnet-type'
          Value: Private
        - Key: Name
          Value: ecsworkshop-base/BaseVPC/PrivateSubnet3
    Metadata:
      'aws:cdk:path': ecsworkshop-base/BaseVPC/PrivateSubnet3/Subnet
  BaseVPCPrivateSubnet3RouteTable4461C92C:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref BaseVPCD45965B8
      Tags:
        - Key: Name
          Value: ecsworkshop-base/BaseVPC/PrivateSubnet3
    Metadata:
      'aws:cdk:path': ecsworkshop-base/BaseVPC/PrivateSubnet3/RouteTable
  BaseVPCPrivateSubnet3RouteTableAssociation4E1C02F3:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref BaseVPCPrivateSubnet3RouteTable4461C92C
      SubnetId: !Ref BaseVPCPrivateSubnet3Subnet3FD941A2
    Metadata:
      'aws:cdk:path': ecsworkshop-base/BaseVPC/PrivateSubnet3/RouteTableAssociation
  BaseVPCPrivateSubnet3DefaultRouteF4148B95:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref BaseVPCPrivateSubnet3RouteTable4461C92C
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref BaseVPCPublicSubnet3NATGateway38B0B965
    Metadata:
      'aws:cdk:path': ecsworkshop-base/BaseVPC/PrivateSubnet3/DefaultRoute
  BaseVPCIGWDCBB6967:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: ecsworkshop-base/BaseVPC
    Metadata:
      'aws:cdk:path': ecsworkshop-base/BaseVPC/IGW
  BaseVPCVPCGWB245CE93:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref BaseVPCD45965B8
      InternetGatewayId: !Ref BaseVPCIGWDCBB6967
    Metadata:
      'aws:cdk:path': ecsworkshop-base/BaseVPC/VPCGW
  ECSCluster7D463CD4:
    Type: 'AWS::ECS::Cluster'
    Properties:
      ClusterName: container-demo
      ClusterSettings:
        - Name: containerInsights
          Value: enabled
    Metadata:
      'aws:cdk:path': ecsworkshop-base/ECSCluster/Resource
  ECSClusterDefaultServiceDiscoveryNamespace5AC2D2BE:
    Type: 'AWS::ServiceDiscovery::PrivateDnsNamespace'
    Properties:
      Name: service.local
      Vpc: !Ref BaseVPCD45965B8
    Metadata:
      'aws:cdk:path': ecsworkshop-base/ECSCluster/DefaultServiceDiscoveryNamespace/Resource
  FrontendToBackendSecurityGroup70D70E25:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Security group for frontend service to talk to backend services
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: '-1'
      VpcId: !Ref BaseVPCD45965B8
    Metadata:
      'aws:cdk:path': ecsworkshop-base/FrontendToBackendSecurityGroup/Resource
  InboundSecGrp3000:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      IpProtocol: TCP
      FromPort: 3000
      GroupId: !GetAtt 
        - FrontendToBackendSecurityGroup70D70E25
        - GroupId
      SourceSecurityGroupId: !GetAtt 
        - FrontendToBackendSecurityGroup70D70E25
        - GroupId
      ToPort: 3000
    Metadata:
      'aws:cdk:path': ecsworkshop-base/InboundSecGrp3000
  InstanceSSMCBFA3CF0:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
        - !Join 
          - ''
          - - 'arn:'
            - !Ref 'AWS::Partition'
            - ':iam::aws:policy/service-role/AmazonEC2RoleforSSM'
    Metadata:
      'aws:cdk:path': ecsworkshop-base/InstanceSSM/Resource
  InstanceInstanceProfileAB5AEF02:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Roles:
        - !Ref InstanceSSMCBFA3CF0
    Metadata:
      'aws:cdk:path': ecsworkshop-base/Instance/InstanceProfile
  InstanceC1063A87:
    Type: 'AWS::EC2::Instance'
    Properties:
      AvailabilityZone: us-east-1a
      IamInstanceProfile: !Ref InstanceInstanceProfileAB5AEF02
      ImageId: !Ref >-
        SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter
      InstanceType: t3.medium
      SecurityGroupIds:
        - !GetAtt 
          - FrontendToBackendSecurityGroup70D70E25
          - GroupId
      SubnetId: !Ref BaseVPCPrivateSubnet1SubnetF99B1DA5
      Tags:
        - Key: Name
          Value: ecsworkshop-base-stresstool
      UserData: !Base64 >
        #!/bin/bash


        #Install the tool

        sudo yum install -y
        https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm

        sudo yum-config-manager --enable epel

        sudo yum  install -y siege
    DependsOn:
      - InstanceSSMCBFA3CF0
    Metadata:
      'aws:cdk:path': ecsworkshop-base/Instance/Resource
  CDKMetadata:
    Type: 'AWS::CDK::Metadata'
    Properties:
      Analytics: >-
        v2:deflate64:H4sIAAAAAAAA/31Qy26DMBD8ltyNq6Tq4xqlVcQlRVDlWhln02wDNvKuiZDFvxdqKJeqpx3PjmdGu5EPz3K9UjdK9OmaVFjKULDSVzFQHwH0RoZjo8XubI7ZTmS+rFAXvjTAI7eg3HqGd1VWsPALtyWyGhWjNb/iEbym2TgOiveK4aY6kTlsB7gYp4bBDXgWxCbTa8tD10sNhkUB2jvkbu+sb346/Euk5tMBkUgNsTIaYlTEvQBNMuwqT0P2uJlgLwhcixpOSNq24DoZpsIvhg6qBmpU9PqD7gWqWobcxhvNc07NnD1jBX0vciDr3eSj3PB/qvHmufHx3JOkF1nHF2vu7uWTXD+uvggxcd4w1iDzOL8B6pN0feQBAAA=
    Metadata:
      'aws:cdk:path': ecsworkshop-base/CDKMetadata/Default
Parameters:
  SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
  BootstrapVersion:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: /cdk-bootstrap/hnb659fds/version
    Description: >-
      Version of the CDK Bootstrap resources in this environment, automatically
      retrieved from SSM Parameter Store. [cdk:skip]
Outputs:
  NSArn:
    Value: !GetAtt 
      - ECSClusterDefaultServiceDiscoveryNamespace5AC2D2BE
      - Arn
    Export:
      Name: NSARN
  NSName:
    Value: service.local
    Export:
      Name: NSNAME
  NSId:
    Value: !GetAtt 
      - ECSClusterDefaultServiceDiscoveryNamespace5AC2D2BE
      - Id
    Export:
      Name: NSID
  FE2BESecGrp:
    Value: !GetAtt 
      - FrontendToBackendSecurityGroup70D70E25
      - GroupId
    Export:
      Name: SecGrpId
  ECSClusterName:
    Value: !Ref ECSCluster7D463CD4
    Export:
      Name: ECSClusterName
  ECSClusterSecGrp:
    Value: '[]'
    Export:
      Name: ECSSecGrpList
  ServicesSecGrp:
    Value: !GetAtt 
      - FrontendToBackendSecurityGroup70D70E25
      - GroupId
    Export:
      Name: ServicesSecGrp
  StressToolEc2Id:
    Value: !Ref InstanceC1063A87
  StressToolEc2Ip:
    Value: !GetAtt 
      - InstanceC1063A87
      - PrivateIp
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert: !Not 
          - 'Fn::Contains':
              - - '1'
                - '2'
                - '3'
                - '4'
                - '5'
              - !Ref BootstrapVersion
        AssertDescription: >-
          CDK bootstrap stack version 6 required. Please run 'cdk bootstrap'
          with a recent version of the CDK CLI.
